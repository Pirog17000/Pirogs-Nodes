class TestCollapsibleNode:
    IS_COLLAPSIBLE = True
    def __init__(self):
        pass

    @classmethod
    def INPUT_TYPES(s):
        return {
            "required": {
                "string_field": ("STRING", {"multiline": False, "default": "Hello World!", "collapsible_group": "group_1"}),
                "int_field": ("INT", {"default": 0, "min": 0, "max": 100, "step": 1, "collapsible_group": "group_1"}),
                "float_field": ("FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01, "collapsible_group": "group_1"}),
                "model": ("MODEL",),
            },
        }

    RETURN_TYPES = ("FLOAT",)
    FUNCTION = "test_function"

    CATEGORY = "Pirog/test"

    def test_function(self, string_field, int_field, float_field, model):
        # The actual logic of the node will go here.
        # For this test node, we'll just return a dummy value.
        result = float_field + int_field
        return (result,)
